{"version":3,"sources":["components/MovieCard.js","components/SearchBar.js","components/Dialog.js","components/Toast.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","media","height","backgroundSize","backgroundColor","MovieCard","src","title","year","imdbID","buttonClick","buttonTitle","nominated","classes","Card","className","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","onClick","disabled","input","button","SearchBar","setMovies","setSearch","useState","setInput","PARAMS","process","noValidate","autoComplete","id","onSubmit","e","preventDefault","search","target","value","axios","get","then","res","data","Response","Search","console","log","reset","catch","error","Grid","container","item","xs","TextField","fullWidth","label","name","onChange","placeholder","type","form","length","AlertDialog","text","open","toggle","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Alert","props","elevation","theme","width","marginTop","spacing","Toast","toastClose","duration","Snackbar","autoHideDuration","severity","padding","border","borderRadius","App","movies","JSON","parse","localStorage","getItem","setNominated","dialogOpen","setDialogOpen","toastOpen","setToastOpen","toastText","setToastText","toastType","setToastType","useEffect","setItem","stringify","nominateClick","dialogToggle","movie","find","Title","removeClick","index","findIndex","movieName","newArray","splice","align","lg","map","md","Year","Poster","some","event","reason","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd207a13.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n    backgroundSize: \"contain\",\n    backgroundColor: \"black\",\n  },\n});\n\nexport default function MovieCard({\n  src,\n  title,\n  year,\n  imdbID,\n  buttonClick,\n  buttonTitle,\n  nominated,\n}) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia className={classes.media} image={src} title={title} />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {year}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => buttonClick(imdbID)}\n          disabled={nominated}\n        >\n          {buttonTitle}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Button, TextField, Grid } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  input: {\n    backgroundColor: \"white\",\n  },\n  button: {\n    height: \"100%\",\n  },\n});\n\nfunction SearchBar({ setMovies, setSearch }) {\n  const [input, setInput] = useState(\"\");\n\n  const API_KEY =\n    process.env.NODE_ENV === \"development\"\n      ? process.env.REACT_APP_API_KEY\n      : process.env.REACT_APP_GH_API_KEY;\n  const URL = \"https://www.omdbapi.com\";\n  const PARAMS = `?apikey=${API_KEY}&type=movie`;\n\n  const searchSubmit = (e) => {\n    e.preventDefault();\n    const search = e.target.title.value;\n    axios\n      .get(`${URL}${PARAMS}&s=${search}`)\n      .then((res) => {\n        if (res.data.Response === \"False\") {\n          //no movie found\n          setSearch(`No movies found that contain \"${e.target.title.value}\"`);\n          setMovies([]);\n        }\n\n        if (res.data?.Search) {\n          setSearch(`Results for \"${e.target.title.value}\"`);\n          setMovies(res.data.Search);\n          console.log(res.data.Search);\n        }\n        e.target.reset();\n        setInput(\"\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <form noValidate autoComplete=\"off\" id=\"searchForm\" onSubmit={searchSubmit}>\n      <Grid container>\n        <Grid item xs={10}>\n          <TextField\n            fullWidth\n            label=\"Search\"\n            name=\"title\"\n            variant=\"outlined\"\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Please use at least 3 letters/numbers\"\n            className={classes.input}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <Button\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n            form=\"searchForm\"\n            color=\"primary\"\n            disabled={input.length < 3}\n            size=\"large\"\n            className={classes.button}\n          >\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function AlertDialog({ title, text, open, toggle }) {\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={toggle}\n        aria-labelledby={title}\n        aria-describedby={text}\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {text}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggle} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Toast({ open, toastClose, type, duration, text }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open} autoHideDuration={duration} onClose={toastClose}>\n        <Alert onClose={toastClose} severity={type}>\n          {text}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { Typography, Grid } from \"@material-ui/core\";\nimport MovieCard from \"./components/MovieCard\";\nimport SearchBar from \"./components/SearchBar\";\nimport Dialog from \"./components/Dialog\";\nimport Toast from \"./components/Toast\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"10px 5vw 10px 5vw\",\n  },\n  container: {\n    border: \"10px solid white\",\n    borderRadius: \"20px\",\n    backgroundColor: \"#DCDCDC\",\n  },\n});\n\nexport default function App() {\n  const [movies, setMovies] = useState([]);\n  const [nominated, setNominated] = useState(\n    JSON.parse(localStorage.getItem(\"nominatedList\")) || []\n  );\n  const [search, setSearch] = useState(\"Please search for movies\");\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastText, setToastText] = useState(\"\");\n  const [toastType, setToastType] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"nominatedList\", JSON.stringify(nominated));\n  }, [nominated]);\n\n  const nominateClick = (imdbID) => {\n    if (nominated.length >= 4) {\n      //tell user that they have reached the max\n      dialogToggle();\n    }\n\n    if (nominated.length < 5) {\n      let movie = movies.find((item) => item.imdbID === imdbID);\n      setToastOpen(true);\n      setToastType(\"success\");\n      setToastText(`Movie \"${movie.Title}\" added`);\n      setNominated([...nominated, movie]);\n    }\n  };\n\n  const nominatedCheck = (imdbID) => {\n    let result = nominated.some((movie) => movie.imdbID === imdbID);\n    return result;\n  };\n\n  const removeClick = (imdbID) => {\n    let index = nominated.findIndex((item) => item.imdbID === imdbID);\n    let movieName = nominated[index].Title;\n\n    let newArray = [...nominated];\n    newArray.splice(index, 1);\n    setNominated(newArray);\n    setToastOpen(true);\n    setToastType(\"error\");\n    setToastText(`Movie \"${movieName}\" removed`);\n  };\n\n  const dialogToggle = () => {\n    setDialogOpen(!dialogOpen);\n  };\n\n  const toastClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setToastOpen(false);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\" align=\"center\" gutterBottom>\n        The Shoppies\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} className={classes.container}>\n          <SearchBar setMovies={setMovies} setSearch={setSearch} />\n        </Grid>\n        <Grid item xs={6} lg={8} align=\"center\" className={classes.container}>\n          <Typography variant=\"h5\" gutterBottom>\n            {search}\n          </Typography>\n          <Grid container spacing={1}>\n            {movies.map((movie) => (\n              <Grid item xs={12} md={6} lg={4}>\n                <MovieCard\n                  title={movie.Title}\n                  year={movie.Year}\n                  src={movie.Poster}\n                  imdbID={movie.imdbID}\n                  buttonClick={nominateClick}\n                  buttonTitle={\"Nominate\"}\n                  nominated={nominatedCheck(movie.imdbID)}\n                  key={movie.imdbID + \"search\"}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item xs={6} lg={4} align=\"center\" className={classes.container}>\n          <Typography variant=\"h5\" gutterBottom>\n            {\"Nominated\"}\n          </Typography>\n          <Grid container spacing={1}>\n            {nominated.map((movie) => (\n              <Grid item xs={12}>\n                <MovieCard\n                  title={movie.Title}\n                  year={movie.Year}\n                  src={movie.Poster}\n                  imdbID={movie.imdbID}\n                  buttonClick={removeClick}\n                  buttonTitle={\"Remove\"}\n                  key={movie.imdbID + \"nominated\"}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Dialog\n        open={dialogOpen}\n        toggle={dialogToggle}\n        title=\"Thank you for nominating\"\n        text=\"You reached the max of 5 movie nominations. To add another movie you will need to remove one\"\n      />\n      <Toast\n        open={toastOpen}\n        toastClose={toastClose}\n        type={toastType}\n        duration={2000}\n        text={toastText}\n      />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}